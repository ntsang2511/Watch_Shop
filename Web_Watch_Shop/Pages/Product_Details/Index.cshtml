@page "{searchString?}"
@model Web_Watch_Shop.Pages.Product_Details.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<section>
    <div class="banner banner4">
        <h2 class="page-name"></h2>
    </div>
    <br>
<p>
        @* Category name:
        <select asp-for="ProductCategory" asp-items="Model.Categories">
        <option value="">All</option>
    </select> *@
    <a class="btn btn-primary text-white" asp-page="Create">Create New</a>
</p>
    <form>
        <p>
            Name:  <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" class="btn btn-primary text-white" value="Search" />|
            <a class="btn btn-primary asp-page="./Index">Back to full List</a>
        </p>
    </form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                    asp-route-currentFilter="@Model.CurrentFilter">
                     @Html.DisplayNameFor(model => model.Product_Detail[0].ProductName)
                </a>
               @*  @Html.DisplayNameFor(model => model.Product_Detail[0].ProductName) *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product_Detail[0].ImagePath)
            </th>
            <th>
                    <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Product_Detail[0].CategoryName)
                    </a>
               @*  @Html.DisplayNameFor(model => model.Product_Detail[0].CategoryName) *@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product_Detail[0].ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product_Detail[0].Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Product_Detailss) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                <img src="@item.ImagePath" alt="Product Image" style="max-width: 50px;" />
            </td>
            <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)$
            </td>
            <td>
                        <a class="btn btn-primary text-white" asp-page="./Edit" asp-route-id="@item.Product_DetailID">Edit</a> |
                        <a class="btn btn-primary text-white" asp-page="./Details" asp-route-id="@item.Product_DetailID">Details</a> |
                        <a class="btn btn-primary text-white" asp-page="./Delete" asp-route-id="@item.Product_DetailID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
    @{
        var prevDisabled = !Model.Product_Detailss.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Product_Detailss.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Product_Detailss.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Product_Detailss.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
